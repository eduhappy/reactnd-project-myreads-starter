{"version":3,"sources":["BooksAPI.js","components/Book.js","components/Bookshelf.js","components/Header.js","components/Search.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","Book","props","books","updateShelfStatus","noBooks","updatedBooks","react_default","a","createElement","Fragment","map","className","key","style","width","height","backgroundImage","imageLinks","thumbnail","onChange","e","target","value","defaultValue","disabled","title","authors","author","index","Bookshelf","status","shelfBooks","undefined","filter","components_Book","Header","Search","booksList","_useState","useState","_useState2","slicedToArray","setBooks","_useState3","_useState4","setNoBooks","searchBooks","query","data","BooksAPI","response","length","booklist","react_router_dom","to","type","placeholder","BooksApp","state","updatedbook","_this","setState","previousState","_this2","this","_this3","react_router","path","render","components_Search","exact","components_Header","components_Bookshelf","React","Component","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d18a341b.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from 'react';\r\n\r\n\r\nconst Book = (props) => {\r\n    const {books, updateShelfStatus, noBooks, updatedBooks} = props\r\n\r\n    if(!noBooks){\r\n        return (\r\n           <>   \r\n            {\r\n            books&&books.map(book => (                    \r\n                <div className=\"book\" key={book.id}>\r\n                <div className=\"book-top\">\r\n                  <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${book.imageLinks&&book.imageLinks.thumbnail})`}}></div>\r\n                 \r\n                  <div className=\"book-shelf-changer\">\r\n                    <select onChange={e => updateShelfStatus(book,e.target.value)} defaultValue={book.shelf}>\r\n                      <option value=\"move\" disabled>Move to...</option>\r\n                      <option value=\"currentlyReading\">Currently Reading</option>\r\n                      <option value=\"wantToRead\">Want to Read</option>\r\n                      <option value=\"read\">Read</option>\r\n                      <option value=\"none\">None</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div className=\"book-title\">{book.title}</div>              \r\n                {         \r\n                book.authors&&book.authors.map((author,index)=> \r\n                <div className=\"book-authors\" key={index}>{author}</div>)\r\n                }\r\n              </div>\r\n            ))\r\n            }\r\n           </>\r\n        );            \r\n    }\r\n    else\r\n    return(<div>No Books returned</div>)\r\n}\r\n\r\nexport default Book;","import React from 'react';\r\nimport Book from './Book';\r\n\r\n\r\nconst Bookshelf = (props) => {\r\n    const {books, updateShelfStatus} = props\r\n    const shelfStatus = [\r\n        { status: 'currentlyReading', title: 'Currently Reading' },\r\n        { status: 'wantToRead', title: 'Want to Read' },\r\n        { status: 'read', title: 'Read' }\r\n      ];\r\n    \r\n    return (\r\n        <>\r\n        {\r\n            shelfStatus.map((shelf, index) => {\r\n            let shelfBooks = []\r\n            if(books!==undefined){\r\n                 shelfBooks = books.filter(book => book.shelf === shelf.status);\r\n            }               \r\n            return(\r\n                <div className=\"bookshelf\" key={index}>\r\n                <h2 className=\"bookshelf-title\">{shelf.title}</h2>\r\n                <div className=\"bookshelf-books\">\r\n                  <ol className=\"books-grid\">\r\n                    <li>\r\n                        <Book books={shelfBooks} updateShelfStatus={updateShelfStatus}/>\r\n                    </li>\r\n                  </ol>\r\n                </div>\r\n              </div>\r\n            );\r\n\r\n        \r\n            })\r\n        }\r\n    </>\r\n    );\r\n}\r\n\r\nexport default Bookshelf;","import React from 'react';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div className=\"list-books-title\">\r\n        <h1>MyReads</h1>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, { useState } from 'react';\r\nimport Book from './Book';\r\nimport * as BooksAPI from '../BooksAPI'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Search = (props) => {\r\n    const {updateShelfStatus, booksList} = props\r\n    const [books, setBooks] = useState([])\r\n    const [noBooks, setNoBooks] = useState(true)\r\n    const searchBooks = (query) => {\r\n        BooksAPI.search(query).then(response =>{\r\n          if(response&&response.length>0){\r\n            response.map(book =>{\r\n                book.shelf = 'none'\r\n                booksList.map(booklist => {\r\n                    if(book.id === booklist.id)\r\n                    book.shelf = booklist.shelf\r\n                })\r\n            })\r\n            setBooks(response)\r\n            setNoBooks(false)\r\n          }  \r\n          else{\r\n            setBooks([])\r\n            setNoBooks(true)\r\n          }        \r\n        })     \r\n      }  \r\n    return (\r\n        <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n        <Link to=\"/\"><button className=\"close-search\">Close</button></Link>\r\n          <div className=\"search-books-input-wrapper\">\r\n            <input type=\"text\" placeholder=\"Search by title or author\" onChange={e => searchBooks(e.target.value)}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"search-books-results\">\r\n          <ol className=\"books-grid\">            \r\n              <Book books={books} noBooks={noBooks} updateShelfStatus={updateShelfStatus}/>\r\n            </ol>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Search;","import React from 'react'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport './App.css'\r\nimport Bookshelf from './components/Bookshelf'\r\nimport Header from './components/Header'\r\nimport Search from './components/Search'\r\nimport { Route, Switch, Link } from 'react-router-dom'\r\n\r\n\r\nclass BooksApp extends React.Component {\r\n  state = {\r\n    books: [],\r\n  }\r\n  componentDidMount(){\r\n    BooksAPI.getAll().then(books => this.setState({books}))\r\n  }\r\n\r\n  updateShelfStatus = (updatedbook, shelf) => {\r\n    BooksAPI.update(updatedbook, shelf).then(response => {\r\n      updatedbook.shelf = shelf;\r\n        this.setState(previousState => ({\r\n          books: previousState.books\r\n          .filter(book => book.id !== updatedbook.id)\r\n          .concat(updatedbook)\r\n        }))\r\n    })\r\n}\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n          <Switch>\r\n            <Route path=\"/search\" render={() =>(<Search updateShelfStatus={this.updateShelfStatus} booksList={this.state.books}/>)} />\r\n            <Route exact path=\"/\" render={() =>(\r\n              <div className=\"list-books\">\r\n                <Header />\r\n                <div className=\"list-books-content\">\r\n                  <div>\r\n                    <Bookshelf books={this.state.books} updateShelfStatus={this.updateShelfStatus}/>\r\n\r\n                  </div>\r\n                </div>\r\n                <div className=\"open-search\">\r\n                  <Link to=\"/search\"><button>Add a book</button></Link>\r\n                </div>\r\n              </div>\r\n            )} /> \r\n          </Switch>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BooksApp\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'))\r\n"],"sourceRoot":""}